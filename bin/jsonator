#!/usr/bin/env node
var json, result,
	opter = require('opter'),
	_ = require('underscore'),
	appVersion = require('../package.json').version,
	opts = require('../options'),
	options = opter(opts, appVersion),
	operationStrategyFactory = require('../lib/operationStrategyFactory.js'),
	stringConverter = require('../lib/stringConverter.js');

process.stdin.resume();
process.stdin.setEncoding('utf8');

process.stdin.on('data', function(chunk) {
	try {
		json = JSON.parse(chunk);
	}
	catch(ex) {
		process.exit(1);
	}
	options.type = options.type || 'string';
	var convertedValue = stringConverter(options.type, options.value),
		strategy = operationStrategyFactory.getStrategy(options.operation);

	try {
		result = strategy.execute(json, options.property, convertedValue);
	}
	catch(ex) {
		process.exit(1);
	}
});

process.stdin.on('end', function() {
	if (result === undefined) {
		process.exit(1);
	}
	process.stdout.write(JSON.stringify(result));
})

process.stdout.on('error', process.exit);
